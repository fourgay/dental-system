import os
import pymysql
from pathlib import Path
from datetime import timedelta

# C·∫•u h√¨nh PyMySQL (n·∫øu d√πng pymysql thay v√¨ mysqlclient)
pymysql.install_as_MySQLdb()

# ƒê·ªãnh nghƒ©a th∆∞ m·ª•c g·ªëc
BASE_DIR = Path(__file__).resolve().parent.parent

# üîπ L·∫•y SECRET_KEY t·ª´ bi·∫øn m√¥i tr∆∞·ªùng (b·∫£o m·∫≠t h∆°n)
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'default-secret-key')

# üîπ T·∫Øt DEBUG khi ch·∫°y production
DEBUG = os.getenv('DJANGO_DEBUG', 'True') == 'True'

# üîπ C·∫•u h√¨nh ALLOWED_HOSTS (Th√™m domain Render)
ALLOWED_HOSTS = [
    "dental-system.onrender.com",  
    "127.0.0.1",
    "localhost",
]

# üîπ CORS (Ch·ªâ m·ªü cho frontend h·ª£p l·ªá)
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "https://your-frontend.onrender.com",  # Thay b·∫±ng domain frontend th·ª±c t·∫ø
    "http://localhost:4000",
    "http://127.0.0.1:4000",
]
CSRF_TRUSTED_ORIGINS = [
    "https://your-frontend.onrender.com",  # Tr√°nh l·ªói CSRF
    "http://localhost:4000",
    "http://127.0.0.1:4000",
]

# ·ª®ng d·ª•ng c√†i ƒë·∫∑t
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # üîπ Qu·∫£n l√Ω static files
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'dental.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dental.wsgi.application'

# üîπ C·∫•u h√¨nh DATABASE (D√πng MySQL)
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("DB_NAME", "dbdental"),
        "USER": os.getenv("DB_USER", "avnadmin"),
        "PASSWORD": os.getenv("DB_PASSWORD", "AVNS_rkAhzlA5uDwLOFROT3g"),
        "HOST": os.getenv("DB_HOST", "mysql-3f4adfe0-dental-st.g.aivencloud.com"),
        "PORT": os.getenv("DB_PORT", "13647"),
        "OPTIONS": {
            "charset": "utf8mb4",
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}
# Ki·ªÉm tra n·∫øu thi·∫øu bi·∫øn DATABASE s·∫Ω d√πng SQLite t·∫°m th·ªùi
if not all(DATABASES['default'].values()):
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }

# X√°c th·ª±c m·∫≠t kh·∫©u
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Ng√¥n ng·ªØ v√† th·ªùi gian
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# üîπ C·∫•u h√¨nh STATICFILES (D√πng Whitenoise)
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# X√°c th·ª±c ng∆∞·ªùi d√πng
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'users.authentication.CustomBackend',
]

AUTH_USER_MODEL = 'users.Data'

# üîπ C·∫•u h√¨nh JWT Authentication
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
}

DATE_INPUT_FORMATS = [
    "%d-%m-%Y",
    "%Y-%m-%d",
]

# C·∫•u h√¨nh ng√¥n ng·ªØ v√† ƒë·ªãnh d·∫°ng ng√†y th√°ng
DATE_FORMAT = "d-m-Y"
USE_L10N = False  # ƒê·ªÉ DATE_FORMAT c√≥ hi·ªáu l·ª±c

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'